/**
 * @notes
 * This spec file has been generated by oughtaTest
 * Based heavily upon the scuri work of Georgi Parlakov - https://github.com/gparlakov/scuri
 * Assuming that the app contains autoSpy and correct path declaration in tsconfig e.g. "autospy": ["src/app/tests/auto-spy"]
 * Also assuming package contains angularMaterial>8 and ng-mocks as a devDependencies - https://github.com/ike18t/ng-mocks#readme
 */
import { waitForAsync, ComponentFixture, TestBed, fakeAsync, tick } from '@angular/core/testing';

import { MatIconModule } from '@angular/material/icon';
import { MatDividerModule } from '@angular/material/divider';
import { MatChipsModule } from '@angular/material/chips';
import { MatAutocompleteModule } from '@angular/material/autocomplete';
import { NoopAnimationsModule } from '@angular/platform-browser/animations';

import { autoSpy } from 'autospy';
import { MockComponent } from 'ng-mocks';
import { of, Subject } from 'rxjs';
import { SentenceCasePipe } from '@pipes/sentence-case.pipe';
import { RecipeViewComponent } from './recipe-view.component';

type Spy<T> = T & jasmine.SpyObj<T>;

describe('RecipeViewComponent', () => {
  let component: RecipeViewComponent;
  let fixture: ComponentFixture<RecipeViewComponent>;

  const sentenceCasePipeSpy: Spy<SentenceCasePipe> = autoSpy(SentenceCasePipe);
  // exampleServiceSpy.exampleMethod.and.returnValue(of(fakeItem)) - for all items that are called in ngOnInit

  beforeEach(
    waitForAsync(() => {
      TestBed.configureTestingModule({
        imports: [MatIconModule, MatDividerModule, MatChipsModule, MatAutocompleteModule, NoopAnimationsModule],
        declarations: [
          RecipeViewComponent
          // MockComponent(ComponentsUsedInTheHTML)
        ],
        providers: [{ provide: SentenceCasePipe, userValue: sentenceCasePipeSpy }]
      }).compileComponents();
    })
  );

  beforeEach(() => {
    fixture = TestBed.createComponent(RecipeViewComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });

  describe('when printView is called it should', () => {
    // remove what is not required
    beforeEach(() => {});

    it('should ...', () => {
      // arrange
      // act
      // component.printView();
      // assert
      // expect(c).toEqual
    });
  });
  describe('when ngOnInit is called it should', () => {
    // remove what is not required
    beforeEach(() => {});

    it('should ...', () => {
      // arrange
      // act
      // component.ngOnInit();
      // assert
      // expect(c).toEqual
    });
  });
  describe('when englishIngredientItem is called it should', () => {
    // remove what is not required
    beforeEach(() => {});

    it('should ...', () => {
      // arrange
      // act
      // component.englishIngredientItem();
      // assert
      // expect(c).toEqual
    });
  });
  describe('when routerLinkURL is called it should', () => {
    // remove what is not required
    beforeEach(() => {});

    it('should ...', () => {
      // arrange
      // act
      // component.routerLinkURL();
      // assert
      // expect(c).toEqual
    });
  });
});
